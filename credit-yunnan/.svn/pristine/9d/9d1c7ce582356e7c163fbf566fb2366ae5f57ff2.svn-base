package com.ccb.portal.service.Impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ccb.portal.dao.CreditParamMapper;
import com.ccb.portal.entity.*;
import com.ccb.portal.util.HttpClientUtils;
import com.ccb.portal.util.JsonUtil;
import com.ccb.portal.util.PropertiesUtil;
import net.sf.json.JSONObject;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ccb.portal.dao.YunnanCreditMapper;
import com.ccb.portal.service.YunnanCreditService;

@Service
public class YunnanCreditServiceImpl implements YunnanCreditService{
	private static Logger logger= LoggerFactory.getLogger(YunnanCreditServiceImpl.class);
	@Autowired
	YunnanCreditMapper yunnanCreditMapper;
	@Autowired
	CreditParamMapper creditParamMapper;
	@Autowired
	ConfigConstant configConstant;
	@Override
	public ResponseCredit getYunNanCreditByCstId(Map<String, String> map) throws Exception {
		JSONObject jsonObject=JSONObject.fromObject(map);
//		System.out.println(configConstant.getGrade());
		String response= HttpClientUtils.doPost(configConstant.getGrade(),jsonObject);
		logger.info(configConstant.getGrade()+"--------------  responseJson-------------------"+response);
		if(StringUtils.isNotBlank(response)){
			ResponseCredit yunnanCredit=(ResponseCredit) JsonUtil.jsontobean(response, ResponseCredit.class, ResponseDmsn.class,"dmsn_grplist");
			if(yunnanCredit!=null){
				String model_type=yunnanCredit.getModel_type();
				String credit_rating_level=yunnanCredit.getCredit_rating_level();
				String modeltype=creditParamMapper.getModelType(model_type);
				String ratinglevel=creditParamMapper.getRatingLevel(credit_rating_level);
				if(StringUtils.isNotBlank(modeltype)&&StringUtils.isNotBlank(ratinglevel)){
					yunnanCredit.setModel_type(modeltype);
					yunnanCredit.setCredit_rating_level(ratinglevel);
				}
				if(yunnanCredit.getDmsn_grplist().size()>0){
					for(ResponseDmsn responseCredit:yunnanCredit.getDmsn_grplist()){
						String dmsn_type=responseCredit.getDmsn_type();
						String dmsntype=creditParamMapper.getDmsnType(dmsn_type);
						if(StringUtils.isNotBlank(dmsntype)){
							responseCredit.setDmsn_type(dmsntype);
						}
					}
				}
			}
			return  yunnanCredit;
		}else{
			return null;
		}
	}

	@Override
	public ResponsePersonCredit getPersonCreditByCstId(Map map) throws Exception {
		JSONObject jsonObject=JSONObject.fromObject(map);
		String response= HttpClientUtils.doPost(configConstant.getPgrade(),jsonObject);
		logger.info(configConstant.getPgrade()+"--------------  responseJson-------------------"+response);
		if(StringUtils.isNotBlank(response)){
			ResponsePersonCredit rep=(ResponsePersonCredit) JsonUtil.fastjsonTobean(response,ResponsePersonCredit.class);
			if(rep.getScsInd().equals("1")){//1查询到数据0没查到
				JSONObject jsonObject1=JSONObject.fromObject(rep.getAgncBnkVchsonMRpCntnt());
				Set<String> set=jsonObject1.keySet();
				List<CreditDmsn>list=new ArrayList<>();
				for(String str:set){
					CreditDmsn cm=new CreditDmsn();
					cm.setDmsn_type(str);
					cm.setDmsn_value(jsonObject1.get(str).toString());
					list.add(cm);
				}
				rep.setDmsn_grplist(list);
				return rep;
			}else{
				return null;
			}
		}
		return null;
	}

}
